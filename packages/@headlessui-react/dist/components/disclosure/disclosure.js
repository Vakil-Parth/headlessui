import{Fragment as U,createContext as A,useContext as I,useEffect as w,useMemo as S,useReducer as j,useRef as R}from"react";import{match as L}from'../../utils/match.js';import{forwardRefWithAs as O,render as k,Features as F}from'../../utils/render.js';import{optionalRef as N,useSyncRefs as M}from'../../hooks/use-sync-refs.js';import{useId as _}from'../../hooks/use-id.js';import{Keys as y}from'../keyboard.js';import{isDisabledReactIssue7711 as G}from'../../utils/bugs.js';import{OpenClosedProvider as W,State as x,useOpenClosed as $}from'../../internal/open-closed.js';import{useResolveButtonType as q}from'../../hooks/use-resolve-button-type.js';import{getOwnerDocument as z}from'../../utils/owner.js';import{useEvent as g}from'../../hooks/use-event.js';var J=(o=>(o[o.Open=0]="Open",o[o.Closed=1]="Closed",o))(J||{}),Q=(n=>(n[n.ToggleDisclosure=0]="ToggleDisclosure",n[n.CloseDisclosure=1]="CloseDisclosure",n[n.SetButtonId=2]="SetButtonId",n[n.SetPanelId=3]="SetPanelId",n[n.LinkPanel=4]="LinkPanel",n[n.UnlinkPanel=5]="UnlinkPanel",n))(Q||{});let V={[0]:e=>({...e,disclosureState:L(e.disclosureState,{[0]:1,[1]:0})}),[1]:e=>e.disclosureState===1?e:{...e,disclosureState:1},[4](e){return e.linkedPanel===!0?e:{...e,linkedPanel:!0}},[5](e){return e.linkedPanel===!1?e:{...e,linkedPanel:!1}},[2](e,t){return e.buttonId===t.buttonId?e:{...e,buttonId:t.buttonId}},[3](e,t){return e.panelId===t.panelId?e:{...e,panelId:t.panelId}}},v=A(null);v.displayName="DisclosureContext";function B(e){let t=I(v);if(t===null){let o=new Error(`<${e} /> is missing a parent <Disclosure /> component.`);throw Error.captureStackTrace&&Error.captureStackTrace(o,B),o}return t}let h=A(null);h.displayName="DisclosureAPIContext";function K(e){let t=I(h);if(t===null){let o=new Error(`<${e} /> is missing a parent <Disclosure /> component.`);throw Error.captureStackTrace&&Error.captureStackTrace(o,K),o}return t}let H=A(null);H.displayName="DisclosurePanelContext";function X(){return I(H)}function Y(e,t){return L(t.type,V,e,t)}let Z=U,ee=O(function(t,o){let{defaultOpen:l=!1,...i}=t,s=`headlessui-disclosure-button-${_()}`,n=`headlessui-disclosure-panel-${_()}`,u=R(null),D=M(o,N(f=>{u.current=f},t.as===void 0||t.as===U)),T=R(null),m=R(null),c=j(Y,{disclosureState:l?0:1,linkedPanel:!1,buttonRef:m,panelRef:T,buttonId:s,panelId:n}),[{disclosureState:p},a]=c;w(()=>a({type:2,buttonId:s}),[s,a]),w(()=>a({type:3,panelId:n}),[n,a]);let P=g(f=>{a({type:1});let b=z(u);if(!b)return;let C=(()=>f?f instanceof HTMLElement?f:f.current instanceof HTMLElement?f.current:b.getElementById(s):b.getElementById(s))();C==null||C.focus()}),E=S(()=>({close:P}),[P]),r=S(()=>({open:p===0,close:P}),[p,P]),d={ref:D};return<v.Provider value={c}><h.Provider value={E}><W value={L(p,{[0]:x.Open,[1]:x.Closed})}>{k({ourProps:d,theirProps:i,slot:r,defaultTag:Z,name:"Disclosure"})}</W></h.Provider></v.Provider>}),te="button",ne=O(function(t,o){let[l,i]=B("Disclosure.Button"),s=X(),n=s===null?!1:s===l.panelId,u=R(null),D=M(u,o,n?null:l.buttonRef),T=g(r=>{var d;if(n){if(l.disclosureState===1)return;switch(r.key){case y.Space:case y.Enter:r.preventDefault(),r.stopPropagation(),i({type:0}),(d=l.buttonRef.current)==null||d.focus();break}}else switch(r.key){case y.Space:case y.Enter:r.preventDefault(),r.stopPropagation(),i({type:0});break}}),m=g(r=>{switch(r.key){case y.Space:r.preventDefault();break}}),c=g(r=>{var d;G(r.currentTarget)||t.disabled||(n?(i({type:0}),(d=l.buttonRef.current)==null||d.focus()):i({type:0}))}),p=S(()=>({open:l.disclosureState===0}),[l]),a=q(t,u),P=t,E=n?{ref:D,type:a,onKeyDown:T,onClick:c}:{ref:D,id:l.buttonId,type:a,"aria-expanded":t.disabled?void 0:l.disclosureState===0,"aria-controls":l.linkedPanel?l.panelId:void 0,onKeyDown:T,onKeyUp:m,onClick:c};return k({ourProps:E,theirProps:P,slot:p,defaultTag:te,name:"Disclosure.Button"})}),le="div",oe=F.RenderStrategy|F.Static,re=O(function(t,o){let[l,i]=B("Disclosure.Panel"),{close:s}=K("Disclosure.Panel"),n=M(o,l.panelRef,p=>{i({type:p?4:5})}),u=$(),D=(()=>u!==null?u===x.Open:l.disclosureState===0)(),T=S(()=>({open:l.disclosureState===0,close:s}),[l,s]),m=t,c={ref:n,id:l.panelId};return<H.Provider value={l.panelId}>{k({ourProps:c,theirProps:m,slot:T,defaultTag:le,features:oe,visible:D,name:"Disclosure.Panel"})}</H.Provider>}),Oe=Object.assign(ee,{Button:ne,Panel:re});export{Oe as Disclosure};
